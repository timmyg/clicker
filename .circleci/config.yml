defaults: &defaults
  docker:
    - image: circleci/node:8.10
  steps:
    - checkout:
        path: ~/clicker
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: Install dependencies
        command: npm i
    - save_cache:
        key: dependency-cache-{{ checksum "package.json" }}
        paths:
          - ./node_modules
    - run:
        name: Run tests
        command: npm test
    - run:
        name: Deploy application
        branches:
          only:
            - master
            - release
            - develop
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            npx serverless deploy --stage prod --verbose
          fi
          if [ "${CIRCLE_BRANCH}" == "release" ]; then
            npx serverless deploy --stage release --verbose
          fi
          if [ "${CIRCLE_BRANCH}" == "develop" ]; then
            npx serverless deploy --stage dev --verbose
          fi

version: 2.0
jobs:
  build:
    docker:
      - image: circleci/golang
    steps:
      - checkout
      - run:
          name: Determine which projects have changed and trigger the builds
          command: |
            git diff --no-commit-id --name-only -r `git log -n 2 --oneline --pretty=format:"%h" | tail -n1` | cut -d/ -f1 | sort -u > projects
            echo -e "Modified directories:`cat projects`\n"
            projects_inc_dep=(`cat projects`)
            echo -e "Calculating dependencies\n"
            for dir in `ls -d */`; do
              for dep in `go list -f '{{ .Deps }}' ./${dir} 2>/dev/null`; do
                for project_dep in `echo $dep | grep github.com/tufin/circleci-monorepo | egrep -v "vendor|${dir%\/}"`; do
                  if [[ " ${projects_inc_dep[@]} " =~ " ${project_dep##*\/} " ]] && ! [[ " ${projects_inc_dep[@]} " =~ " ${dir%\/} " ]]; then
                    projects_inc_dep+=(${dir%\/})
                  fi
                done
              done
            done
            echo -e "Building: ${projects_inc_dep[@]}\n"
            for project in ${projects_inc_dep[@]}; do
              if grep -Fxq $project project-dirs; then
                printf "\nTriggerring build for project: "$project
                curl -s -u ${CIRCLE_TOKEN}: \
                  -d build_parameters[CIRCLE_JOB]=${project} \
                  https://circleci.com/api/v1.1/project/github/Tufin/circleci-monorepo/tree/$CIRCLE_BRANCH
              fi
            done
  build-widget:
    working_directory: ~/clicker/functions/widget
    <<: *defaults
  build-lead:
    working_directory: ~/clicker/functions/lead
    <<: *defaults
  build-program:
    working_directory: ~/clicker/functions/program
    <<: *defaults

workflows:
  version: 2
  build-test-deploy:
    jobs:
      # - build-program
      # - build-widget
      # - build-lead
