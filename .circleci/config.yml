aliases:
  - &serverless_build_test_deploy
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout:
          path: ~/clicker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Deploy application
          branches:
            only:
              - master
              - release
              - develop
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npx serverless deploy --stage prod --verbose
            fi
            if [ "${CIRCLE_BRANCH}" == "release" ]; then
              npx serverless deploy --stage release --verbose
            fi
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              npx serverless deploy --stage dev --verbose
            fi
version: 2.0
jobs:
  build:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - run:
          name: Determine which projects have changed and trigger the builds
          command: |
            git diff --no-commit-id --name-only  `git log -n 2 --oneline --pretty=format:"%h" | tail -n1` | cut -d/ -f-2 | sort -u > projects
            echo -e "Modified directories:`cat projects`\n"
            projects_inc_dep=(`cat projects`)
            echo -e "Calculating dependencies\n"
            for dir in `ls -d */`; do
              for dep in `go list -f '{{ .Deps }}' ./${dir} 2>/dev/null`; do
                for project_dep in `echo $dep | grep github.com/teamclicker/clicker | egrep -v "vendor|${dir%\/}"`; do
                  if [[ " ${projects_inc_dep[@]} " =~ " ${project_dep##*\/} " ]] && ! [[ " ${projects_inc_dep[@]} " =~ " ${dir%\/} " ]]; then
                    projects_inc_dep+=(${dir%\/})
                  fi
                done
              done
            done
            echo -e "Building: ${projects_inc_dep[@]}\n"
            for project in ${projects_inc_dep[@]}; do
              if grep -Fxq $project .projects; then
                printf "\nTriggering build for project: $project"
                curl -s -u ${CIRCLE_TOKEN}: \
                  -d build_parameters[CIRCLE_JOB]=${project} \
                  https://circleci.com/api/v1.1/project/github/teamclicker/clicker/tree/$CIRCLE_BRANCH
              fi
            done
  functions/widget:
    working_directory: ~/clicker/functions/widget
    <<: *serverless_build_test_deploy
  functions/lead:
    working_directory: ~/clicker/functions/lead
    <<: *serverless_build_test_deploy
  functions/program:
    working_directory: ~/clicker/functions/program
    <<: *serverless_build_test_deploy
  web/app:
    working_directory: ~/clicker/web/app
    docker:
      - image: circleci/node:8.10
    steps:
      - run:
          name: Deploy application
          branches:
            only:
              - master
              - release
              - develop
          command: |
            echo -e "deploy clicker web"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              curl -X POST -d {} https://api.netlify.com/build_hooks/5c7458709c6a819dd611ee82
            fi
            if [ "${CIRCLE_BRANCH}" == "release" ]; then
              curl -X POST -d {} https://api.netlify.com/build_hooks/5c74588dce2aff6b7eb9d135
            fi
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              curl -X POST -d {} https://api.netlify.com/build_hooks/5c745884ad8fd5e199de18cf
            fi
  mobile/app:
    working_directory: ~/clicker/mobile/app
    docker:
      - image: circleci/node:8.10
    steps:
      - run:
          name: Deploy application
          branches:
            only:
              - master
              - release
              - develop
          command: |
            echo -e "deploy clicker mobile"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              curl -X POST -d {} https://api.netlify.com/build_hooks/5c745a22aad21db652db51e1
            fi
            if [ "${CIRCLE_BRANCH}" == "release" ]; then
              curl -X POST -d {} https://api.netlify.com/build_hooks/5c745a2933754a346bf8ef90
            fi
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              curl -X POST -d {} https://api.netlify.com/build_hooks/5c745a2f1056ec16dab4338b
            fi
  packages/antenna:
    working_directory: ~/clicker/packages
    docker:
      - image: circleci/python:2.7-jessie
    steps:
      - run:
          name: Install aws cli
          command: sudo pip install awscli
      - run:
          name: Deploy application
          branches:
            only:
              - master
              - release
              - develop
          command: |
            echo -e "upload antenna package to s3"
            mkdir tmp && cd tmp
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              tar -zcvf antenna.tar.gz ../antenna
              aws s3 cp antenna.tar.gz s3://clicker-antenna
            fi
            if [ "${CIRCLE_BRANCH}" == "release" ]; then
              tar -zcvf antenna-release.tar.gz ../antenna
              aws s3 cp antenna-release.tar.gz s3://clicker-antenna
            fi
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              tar -zcvf antenna-develop.tar.gz ../antenna
              aws s3 cp antenna-develop.tar.gz s3://clicker-antenna
            fi
