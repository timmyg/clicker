service: serverless-api-with-dynamodb

frameworkVersion: '>=1.1.0 <2.0.0'

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  tableName: devices-${self:custom.stage}
  # Set our DynamoDB throughput for prod and all other non-prod stages.
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}

functions:
  createDevice:
    handler: api.createDevice
    events:
      - http:
          path: device
          method: post
          cors: true
  hello:
    handler: api.hello
    events:
      - http:
          path: hello
          method: get
          cors: true

resources:
  - ${file(resources/dynamodb-table.yml)}
