{
  "name": "locations",
  "version": "1.0.0",
  "description": "",
  "main": "locations.js",
  "scripts": {
    "test": "jest --coverage",
    "invoke:health": "serverless invoke local --function health --stage develop",
    "invoke:all:geo": "serverless invoke local --function all --stage develop --path ../.resources/data/location-all-geo.json",
    "invoke:all": "serverless invoke local --function all --stage develop --path ../.resources/data/location-all.json",
    "invoke:add": "serverless invoke local --function create --path ../.resources/data/location-all.json --stage develop",
    "invoke:update": "serverless invoke local --function update --path ../.resources/data/location-update.json",
    "invoke:boxes:add": "serverless invoke local --function addBoxes --path ../.resources/data/boxes.json",
    "invoke:boxes:all": "serverless invoke local --function getBoxes --path ../.resources/data/boxes.json",
    "invoke:get": "serverless invoke local --function get --stage develop --path ../.resources/data/location-update.json",
    "invoke:boxes:identify": "serverless invoke local --function identifyBoxes --path ../.resources/data/boxes.json",
    "invoke:boxes:labels": "serverless invoke local --function setLabels --path ../.resources/data/boxes-labels.json",
    "invoke:boxes:updateBoxInfo": "serverless invoke local --function updateBoxInfo --stage develop --path ../.resources/data/box-update.json",
    "invoke:controlCenterByLocation": "npm run build && serverless invoke local --function controlCenterByLocation --path ../.resources/data/location-update.json --stage develop",
    "invoke:updateAirtableNowShowing": "npm run build && serverless invoke local --function updateAirtableNowShowing --stage develop",
    "invoke:updateAllBoxesPrograms": "npm run build && serverless invoke local --function updateAllBoxesPrograms --stage develop",
    "invoke:getLocationDetailsPage": "npm run build && serverless invoke local --function getLocationDetailsPage --path ../.resources/data/location-update.json --stage develop",
    "invoke:syncAirtableLocations": "npm run build && serverless invoke local --function syncAirtableLocations --stage develop",
    "invoke:syncAirtableRegions": "npm run build && serverless invoke local --function syncAirtableRegions --stage develop",
    "invoke:setBoxes": "npm run build && serverless invoke local --function setBoxes --path ../.resources/data/v2/antenna-boxes.json --stage develop"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@sentry/node": "^6.0.0",
    "@sentry/serverless": "^6.0.0",
    "airtable": "^0.8.1",
    "aws-sdk": "^2.752.0",
    "aws-xray-sdk": "^2.5.0",
    "dotenv": "^7.0.0",
    "dynamodb-toolbox": "^0.1.0",
    "dynamoose": "^1.11.1",
    "geolib": "^2.0.24",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.27",
    "mustache": "^4.0.0",
    "serverless-bundle": "^4.2.0",
    "serverless-helpers": "git+https://github.com/timmyg/serverless-helpers.git#v0.3.13",
    "serverless-plugin-scripts": "^1.0.2",
    "serverless-sentry-lib": "^2.3.0"
  },
  "devDependencies": {
    "flow-bin": "^0.107.0",
    "flow-remove-types": "^2.107.0",
    "jest": "^24.0.0",
    "serverless": "^1.38.0",
    "serverless-domain-manager": "^2.6.13",
    "serverless-dotenv-plugin": "^2.1.1",
    "serverless-plugin-tracing": "^2.0.0",
    "serverless-prune-plugin": "^1.4.0",
    "serverless-sentry": "^1.2.0",
    "ts-jest": "^26.4.4"
  }
}
