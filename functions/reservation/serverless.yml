service: reservation
frameworkVersion: '>=1.1.0 <2.0.0'
provider:
  name: aws
  runtime: nodejs8.10
  environment:
    stage: ${self:custom.stage}
    tableReservation: ${self:custom.tableReservation}

plugins:
  - serverless-domain-manager

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: api.tryclicker.com
    release: api-release.tryclicker.com
    dev: api-dev.tryclicker.com
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: reservations
    certificateName: 'api.tryclicker.com'
    stage: ${self:custom.stage}
    createRoute53Record: true
    endpointType: 'edge'
  tableReservation: reservations-${self:custom.stage}
resources:
  Resources:
    ReservationTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableReservation}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}

functions:
  health:
    handler: reservation.health
    events:
      - http:
          path: health
          method: get
          cors: true
  getAll:
    handler: reservation.getAll
    events:
      - http:
          path: ''
          method: get
          cors: true
  create:
    handler: reservation.create
    events:
      - http:
          path: ''
          method: post
          cors: true
  cancel:
    handler: reservation.cancel
    events:
      - http:
          path: '{id}'
          method: delete
          cors: true
  changeChannel:
    handler: reservation.changeChannel
    events:
      - http:
          path: '{id}/channel'
          method: put
          cors: true
  changeTime:
    handler: reservation.changeTime
    events:
      - http:
          path: '{id}/time'
          method: put
          cors: true
