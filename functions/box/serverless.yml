service: box
frameworkVersion: '>=2.0.0 <3.0.0'
provider:
  name: aws
  memorySize: 1024
  versionFunctions: false
  runtime: nodejs12.x
  # tracing: true
  logRetentionInDays: 14
  deploymentBucket:
    name: serverless-deploys-clicker
  environment:
    stage: ${self:custom.stage}
    region: ${opt:region, self:provider.region}
  iamRoleStatements: ${file(../serverless.common.yml):iamRoleStatements}
plugins:
  - serverless-prune-plugin
  - serverless-deployment-bucket
  - serverless-domain-manager
  - serverless-sentry
  - serverless-dotenv-plugin
  - serverless-plugin-tracing
  - serverless-bundle
custom:
  stage: ${opt:stage}
  tableBox: boxes-${self:custom.stage}
  bundle:
    sourcemaps: false
    linting: false
  prune:
    automatic: true
    number: 3
  domains: ${file(../serverless.common.yml):domains}
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: boxes
    certificateName: 'api.tryclicker.com'
    stage: ${self:custom.stage}
    createRoute53Record: true
    endpointType: 'edge'
  sentry:
    dsn: ${env:SENTRY_DSN_ENDPOINT}
  dotenv:
    basePath: ../
functions:
  health:
    handler: index.health
    events:
      - http:
          path: health
          method: get
  createDirectv:
    handler: index.createDirectv
    events:
      - http:
          path: '{locationId}/directv'
          method: post
  create:
    handler: index.create
    events:
      - http:
          path: '{locationId}'
          method: post
  updateLive:
    handler: index.updateLive
    events:
      - http:
          path: '{locationId}/{boxId}/live'
          method: put
  remove:
    handler: index.remove
    events:
      - http:
          path: '{locationId}/{boxId}'
          method: delete
  get:
    handler: index.get
    events:
      - http:
          path: '{locationId}/{boxId}'
          method: get
  getAll:
    handler: index.getAll
    events:
      - http:
          path: '{locationId}'
          method: get
