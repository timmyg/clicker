frameworkVersion: ${file(../serverless.base.yml):frameworkVersion}
plugins: ${file(../serverless.base.yml):plugins}
service: ${self:custom.basePath}
provider:
  name: ${file(../serverless.base.yml):provider.name}
  runtime: ${file(../serverless.base.yml):provider.runtime}
  environment:
    tableProgram: ${self:custom.tableProgram}
    serviceName: ${self:service}
    stage: ${self:custom.stage}
  iamRoleStatements: ${file(../serverless.base.yml):provider.iamRoleStatements}
custom:
  stage: ${file(../serverless.base.yml):custom.stage}
  domains: ${file(../serverless.base.yml):custom.domains}
  customDomain: ${file(../serverless.base.yml):custom.customDomain}
  tableThroughputs: ${file(../serverless.base.yml):custom.tableThroughputs}
  tableThroughput: ${file(../serverless.base.yml):custom.tableThroughput}
  tableProgram: programs-${self:custom.stage}
  basePath: program
resources:
  Resources:
    ProgramTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableProgram}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}

functions:
  health:
    handler: program.health
    events:
      - http:
          path: health
          method: get
          cors: true
  pullNew:
    handler: program.pullNew
    events:
      - http:
          path: new
          method: post
          cors: true
      - schedule: cron(0 2 * * ? *)
      - schedule: cron(0 10 * * ? *)
      - schedule: cron(0 18 * * ? *)
  pullDescriptions:
    handler: program.pullDescriptions
    events:
      - http:
          path: descriptions
          method: post
          cors: true
      - schedule: cron(1 2 * * ? *)
      - schedule: cron(1 10 * * ? *)
      - schedule: cron(1 18 * * ? *)
