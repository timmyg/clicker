schema {
  query: Query
  mutation: Mutation
}

scalar Long

type Query {
  box(id: ID!, locationId: String!): Box
  boxes(locationId: String!): [Box]
}

type Mutation {
  addBox(
    id: ID!
    locationId: String!
    region: String!
    info: BoxInfoInput!
    zone: String
    label: String
    configuration: BoxConfigurationInput!
  ): Box!
  updateBoxLive(id: ID!, locationId: String!, live: BoxLiveInput!): Box!
  deleteBox(id: ID!, locationId: String!): Box
}

input BoxInfoInput {
  ip: String!
  clientAddress: String!
  locationName: String
  notes: String
}

input BoxConfigurationInput {
  appActive: Boolean
  automationActive: Boolean
}

input BoxLiveInput {
  channel: Int
  channelMinor: Int
  channelChangeAt: AWSTimestamp
  channelChangeSource: String
  updatedAt: AWSTimestamp
  lockedProgrammingIds: [String]
  # locked: Boolean
  # appLocked: Boolean
  lockedUntil: AWSTimestamp
  region: String!
}

type GameScoreboard {
  display: String
  clock: String
  period: Int
}

type GameStatus {
  started: Boolean
  blowout: Boolean
  ended: Boolean
  description: String
}

type GameBroadcast {
  network: String
}

type GameBook {
  total: Int
  moneyline: String
  spread: String
}

type TeamName {
  full: String
  short: String
  abbr: String
  display: String
}

type GameTeam {
  id: Int
  score: Int
  name: TeamName
  logo: String
  rank: Int
  book: GameBook
}

type Game {
  id: String!
  title: String!
  isOver: Boolean
  # start: String
  # id: Int
  # status: String
  # leagueName: String
  # scoreboard: GameScoreboard
  # broadcast: GameBroadcast
  # away: GameTeam
  # home: GameTeam
  # summary: GameStatus
}

type Program {
  gameId: String
  game: Game
  channel: Int
  channelId: Int
  channelTitle: String
  createdAt: String
  description: String
  durationMins: Int
  end: Int
  endFromNow: String
  expires: String
  hd: Boolean
  id: String
  live: Boolean
  mainCategory: String
  programmingId: String
  programType: String
  region: String
  repeat: Boolean
  start: Int
  startFromNow: String
  startOriginal: Int
  title: String
  updatedAt: String
}

type BoxLive {
  channel: Int!
  channelMinor: Int
  channelChangeAt: AWSTimestamp
  channelChangeSource: String
  program: Program
  lockedProgrammingIds: [String]
  locked: Boolean
  appLocked: Boolean
  lockedUntil: AWSTimestamp
  updatedAt: AWSTimestamp
  region: String!
}

type BoxInfo {
  ip: String!
  clientAddress: String!
  locationName: String
  notes: String
}

type BoxConfiguration {
  appActive: Boolean!
  automationActive: Boolean!
}

type Box {
  id: ID!
  locationId: String!
  region: String!
  label: String
  zone: String
  configuration: BoxConfiguration!
  info: BoxInfo!
  live: BoxLive!
  updatedAt: Int
}
