service: graphql
frameworkVersion: '>=2.0.0 <3.0.0'
provider:
  name: aws
  memorySize: 1024
  versionFunctions: false
  runtime: nodejs12.x
  # tracing: true
  logRetentionInDays: 14
  deploymentBucket:
    name: serverless-deploys-clicker
  environment:
    stage: ${self:custom.stage}
    region: ${opt:region, self:provider.region}
    tableBox: ${self:custom.tableBox}
    graphqlApiUrl: ${env:GRAPHQL_API_URL, self:custom.graphqlApiUrl}
    graphqlApiKey: ${env:GRAPHQL_API_KEY, self:custom.graphqlApiKey}
  iamRoleStatements: ${file(../serverless.common.yml):iamRoleStatements}
resources:
  Resources:
    BoxesTable: ${file(./resources/tables/table.boxes.yml)}
plugins:
  - serverless-prune-plugin
  - serverless-deployment-bucket
  - serverless-domain-manager
  - serverless-sentry
  - serverless-dotenv-plugin
  - serverless-plugin-tracing
  - serverless-appsync-plugin
  - serverless-bundle
custom:
  stage: ${opt:stage}
  tableBox: boxes-${self:custom.stage}
  graphqlApiUrl: { Fn::GetAtt: [GraphQlApi, GraphQLUrl] }
  graphqlApiKey: { Fn::GetAtt: [GraphQlApiKeyDefault, ApiKey] }
  bundle:
    sourcemaps: false
    linting: false
  prune:
    automatic: true
    number: 3
  domains: ${file(../serverless.common.yml):domains}
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: graphql
    certificateName: 'api.tryclicker.com'
    stage: ${self:custom.stage}
    createRoute53Record: true
    endpointType: 'edge'
  sentry:
    dsn: ${env:SENTRY_DSN_ENDPOINT}
  dotenv:
    basePath: ../
  appSync:
    name: ${self:service}-${self:custom.stage}
    authenticationType: API_KEY
    apiKeys:
      - myApiKey
    schema: ${file(./resources/data.yml):schemas}
    dataSources: ${file(./resources/data.yml):dataSources}
    mappingTemplates: ${file(./resources/data.yml):mappingTemplates}
functions:
  health:
    handler: graphql.health
    events:
      - http:
          path: health
          method: get
  fetchBoxProgram:
    handler: graphql.fetchBoxProgram
    timeout: 12
  fetchBoxProgramGame:
    handler: graphql.fetchBoxProgramGame
    timeout: 12
  query:
    timeout: 12
    handler: graphql.query
  mutate:
    timeout: 12
    handler: graphql.mutate
