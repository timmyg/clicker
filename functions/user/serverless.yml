service: user
frameworkVersion: '>=1.1.0 <2.0.0'
provider:
  name: aws
  memorySize: 128
  versionFunctions: false
  runtime: nodejs10.x
  # tracing: true
  logRetentionInDays: 14
  deploymentBucket:
    name: serverless-deploys-clicker
  environment:
    tableUser: ${self:custom.tableUser}
    stage: ${self:custom.stage}
    stripeSecretKey: ${self:custom.stripeSecretKey.${self:custom.stage}}
    twilioAccountSid: ${env:TWILIO_ACCOUNT_SID}
    twilioAuthToken: ${env:TWILIO_AUTH_TOKEN}
    twilioServiceSid: ${env:TWILIO_SERVICE_SID}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:*
        - lambda:InvokeFunction
        - lambda:InvokeAsync
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: '*'

plugins:
  - serverless-domain-manager
  - serverless-prune-plugin
  - serverless-sentry
  - serverless-dotenv-plugin
  - serverless-plugin-tracing

custom:
  stage: ${opt:stage, self:provider.stage}
  prune:
    automatic: true
    number: 3
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  domains:
    prod: api.tryclicker.com
    release: api-release.tryclicker.com
    develop: api-develop.tryclicker.com
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: users
    certificateName: 'api.tryclicker.com'
    stage: ${self:custom.stage}
    createRoute53Record: true
    endpointType: 'edge'
  sentry:
    dsn: ${env:SENTRY_DSN_ENDPOINT}
  dotenv:
    basePath: ../
  tableUser: users-${self:custom.stage}
  stripeSecretKey:
    prod: ${env:STRIPE_SECRET_KEY}
    release: ${env:STRIPE_SECRET_KEY_DEV}
    develop: ${env:STRIPE_SECRET_KEY_DEV}
resources:
  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableUser}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: phone
            AttributeType: S
          - AttributeName: referralCode
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        # ProvisionedThroughput:
        #   ReadCapacityUnits: ${self:custom.tableThroughput}
        #   WriteCapacityUnits: ${self:custom.tableThroughput}
        GlobalSecondaryIndexes:
          - IndexName: phoneGlobalIndex
            KeySchema:
              - AttributeName: phone
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
            # ProvisionedThroughput:
            #   ReadCapacityUnits: ${self:custom.tableThroughput}
            #   WriteCapacityUnits: ${self:custom.tableThroughput}
          - IndexName: referralCodeGlobalIndex
            KeySchema:
              - AttributeName: referralCode
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
            # ProvisionedThroughput:
            #   ReadCapacityUnits: ${self:custom.tableThroughput}
            #   WriteCapacityUnits: ${self:custom.tableThroughput}

functions:
  health:
    handler: user.health
    events:
      - http:
          path: health
          method: get
  create:
    handler: user.create
    events:
      - http:
          path: ''
          method: post
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  wallet:
    handler: user.wallet
    events:
      - http:
          path: wallet
          method: get
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  updateCard:
    handler: user.updateCard
    events:
      - http:
          path: stripe/card
          method: post
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  removeCard:
    handler: user.removeCard
    events:
      - http:
          path: stripe/card
          method: delete
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  replenish:
    handler: user.replenish
    events:
      - http:
          path: replenish
          method: post
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  charge:
    handler: user.charge
    events:
      - http:
          path: charge
          method: post
  subscribe:
    handler: user.subscribe
    events:
      - http:
          path: subscribe
          method: post
  transaction:
    handler: user.transaction
    events:
      - http:
          path: transaction
          method: post
  alias:
    handler: user.alias
    events:
      - http:
          path: alias/{fromId}/{toId}
          method: post
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  verifyStart:
    handler: user.verifyStart
    events:
      - http:
          path: verify/start
          method: post
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  verify:
    handler: user.verify
    events:
      - http:
          path: verify
          method: post
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
  referral:
    handler: user.referral
    events:
      - http:
          path: referral
          method: post
          cors:
            origin: '*'
            headers:
              - partner
              - app
              - clicker
              - authorization
              - content-type
